root.recipe("time_track", TargetType.Executable, fun(r){
    r.add("src/app", "time_track/**.cpp")
    r.add("src/app", "time_track/**.hpp")
    r.depends_on("termcolor")

    for (e: ["std", "io", "algo"]) { r.depends_on("gubg/${e}/func") }
    })

root.recipe("pa", TargetType.Executable, fun(r){
    r.add("src/app", "pa/**.cpp")
    r.add("src/app", "pa/**.hpp")

    for (e: ["std", "io", "algo"]) { r.depends_on("gubg/${e}/func") }
    r.depends_on("chai/func")

    if (my(OS) == OS.Linux){
        r.library("dl")
        r.library("pthread")
    }
    })

root.recipe("pit", TargetType.Executable, fun(r){
    r.add("src/app", "pit/**.cpp")
    r.add("src/app", "pit/**.hpp")
    for (e: ["std", "io", "algo"]) { r.depends_on("gubg/${e}/func") }
    })

root.recipe("pigr", TargetType.Executable, fun(r){
    r.add("src/app", "pigr/**.cpp")
    r.add("src/app", "pigr/**.hpp")
    for (e: ["std", "io", "algo"]) { r.depends_on("gubg/${e}/func") }
    })
